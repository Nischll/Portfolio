@tailwind base;
@tailwind components;
@tailwind utilities;

html {
  scroll-behavior: smooth;
}

/* If your navbar is ~64px high */
:root {
  --nav-h: 64px;
}

/* Utility class for anchor scroll targets 
   so content isn't hidden behind sticky nav */
.scroll-section {
  scroll-margin-top: var(--nav-h);
}

section[id] {
  scroll-margin-top: var(--nav-h); /* you already set --nav-h on the header */
}

.section {
  scroll-margin-top: var(--nav-h);
}

/* ------------------------------------------------------------------
   Design tokens (CSS variables)
   - Keep HSL or hex tokens here in one place for easy tuning.
   - Hover/dark variants included as separate variables.
   ------------------------------------------------------------------ */
@layer base {
  :root {
    /* Palette (hex primary palette you provided) */
    --primary: #f1ece5;
    --primary-dark: #e0d8cc; /* used for hover/active */
    --secondary: #e4c982;
    --secondary-dark: #d6b762;
    --accent: #bd9e89;
    --accent-dark: #a7836e;
    --neutral: #545454;
    --neutral-dark: #3f3f3f;
    --highlight: #faede0;
    --muted: #ced1d4;

    /* destructive + support */
    --destructive: #ef4444;
    --destructive-foreground: #ffffff;

    /* base background/foreground */
    --background: #ffffff;
    --foreground: #111827;

    --radius: 0.75rem;
  }

  /* Global body styles */
  body {
    @apply bg-[color:var(--background)] text-[color:var(--foreground)] antialiased;
    font-family: "Inter", system-ui, -apple-system, "Segoe UI", Roboto,
      "Helvetica Neue", Arial;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    @apply font-heading;
  }

  p {
    @apply font-body;
  }
  /* NAV LINK: animated underline that grows Lâ†’R on hover or when .active is present */
  .nav-link {
    @apply relative inline-block text-sm font-medium transition-colors focus:outline-none;
  }

  /* make room under the text so the bar isn't right up on characters */
  .nav-link::after {
    content: "";
    position: absolute;
    left: 0;
    bottom: -6px; /* adjust so underline sits nicely under text */
    width: 100%;
    height: 2px;
    background-color: var(--neutral); /* uses your design token */
    transform-origin: left center;
    transform: scaleX(0);
    transition: transform 220ms cubic-bezier(0.2, 0.9, 0.3, 1), opacity 220ms;
    opacity: 0.95;
    border-radius: 2px;
  }

  /* hover / focus visible grows line */
  .nav-link:hover::after,
  .nav-link:focus::after,
  .nav-link:focus-visible::after {
    transform: scaleX(1);
  }

  /* active state: keeps the underline visible (used when current === item.id) */
  .nav-link.active::after {
    transform: scaleX(1);
    /* you can slightly change color for active */
    background-color: var(--primary-dark);
  }

  /* accessibility: visible focus ring while keeping underline */
  .nav-link:focus-visible {
    outline: 2px solid transparent;
    box-shadow: 0 0 0 3px rgba(84, 84, 84, 0.08);
    border-radius: 4px;
  }
}

/* ------------------------------------------------------------------
   Components: ready-to-use classes (buttons, card)
   - Buttons implemented using explicit background classes and hover/active variants.
   ------------------------------------------------------------------ */
@layer components {
  /* Generic card */
  .card {
    @apply p-6 rounded-lg shadow-md;
    background-color: var(--highlight);
    color: var(--neutral);
  }

  /* Button base (shared rules) */
  .btn {
    @apply inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors transform-gpu will-change-transform focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-neutral disabled:pointer-events-none disabled:opacity-50;
  }

  /* Button variants (use these class names if you prefer not to use Button component) */
  .btn-primary {
    @apply btn;
    background-color: var(--primary);
    color: var(--neutral);
  }
  .btn-primary:hover {
    background-color: var(--primary-dark);
  }
  .btn-primary:active {
    background-color: var(--primary-dark);
    transform: scale(0.97);
  }

  .btn-secondary {
    @apply btn;
    background-color: var(--secondary);
    color: var(--neutral);
  }
  .btn-secondary:hover {
    background-color: var(--secondary-dark);
  }
  .btn-secondary:active {
    background-color: var(--secondary-dark);
    transform: scale(0.97);
  }

  .btn-accent {
    @apply btn;
    background-color: var(--accent);
    color: var(--neutral);
  }
  .btn-accent:hover {
    background-color: var(--accent-dark);
  }
  .btn-accent:active {
    background-color: var(--accent-dark);
    transform: scale(0.97);
  }

  .btn-neutral {
    @apply btn;
    background-color: var(--neutral);
    color: var(--highlight);
  }
  .btn-neutral:hover {
    background-color: var(--neutral-dark);
  }
  .btn-neutral:active {
    background-color: var(--neutral-dark);
    transform: scale(0.97);
  }

  .btn-destructive {
    @apply btn;
    background-color: var(--destructive);
    color: var(--destructive-foreground);
  }
  .btn-destructive:hover {
    filter: brightness(0.95);
  }
  .btn-destructive:active {
    transform: scale(0.97);
    filter: brightness(0.9);
  }

  .btn-outline {
    @apply btn border px-3 py-1 bg-[color:var(--background)] text-[color:var(--neutral)];
    border-color: rgba(0, 0, 0, 0.06);
  }
  .btn-outline:hover {
    background-color: rgba(0, 0, 0, 0.03);
  }
  .btn-ghost {
    @apply btn bg-transparent text-[color:var(--neutral)];
  }
  .btn-ghost:hover {
    background-color: rgba(0, 0, 0, 0.03);
  }

  /* icon-sized button helper */
  .btn-icon {
    @apply h-9 w-9 inline-flex items-center justify-center rounded-full;
  }
}

/* ------------------------------------------------------------------
   Utilities: explicit classes that cva variants reference
   - IMPORTANT: these must match the class names used in your `buttonVariants`.
   ------------------------------------------------------------------ */
@layer utilities {
  /* background utilities */
  .bg-primary {
    background-color: var(--primary);
  }
  .bg-primary-dark {
    background-color: var(--primary-dark);
  }
  .bg-secondary {
    background-color: var(--secondary);
  }
  .bg-secondary-dark {
    background-color: var(--secondary-dark);
  }
  .bg-accent {
    background-color: var(--accent);
  }
  .bg-accent-dark {
    background-color: var(--accent-dark);
  }
  .bg-neutral {
    background-color: var(--neutral);
  }
  .bg-neutral-dark {
    background-color: var(--neutral-dark);
  }
  .bg-highlight {
    background-color: var(--highlight);
  }
  .bg-destructive {
    background-color: var(--destructive);
  }

  /* text utilities */
  .text-neutral {
    color: var(--neutral);
  }
  .text-highlight {
    color: var(--highlight);
  }
  .text-primary {
    color: var(--primary);
  }
  .text-secondary {
    color: var(--secondary);
  }
  .text-accent {
    color: var(--accent);
  }
  .text-destructive-foreground {
    color: var(--destructive-foreground);
  }

  /* border / input utilities used by variants */
  .border-input {
    border-color: rgba(0, 0, 0, 0.06);
  }
  .bg-background {
    background-color: var(--background);
  }
  .text-foreground {
    color: var(--foreground);
  }

  /* small helper: subtle overlay (used in some hover states) */
  .bg-accent-dark-08 {
    background-color: rgba(167, 131, 110, 0.08);
  } /* ~8% tint */
}

/* end of file */
